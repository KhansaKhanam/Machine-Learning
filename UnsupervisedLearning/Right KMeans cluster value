#################################
# Coding Work2: How to choose K in K-means

import numpy as np
from sklearn.datasets import load_wine
from sklearn.metrics import silhouette_score
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

def plot_inertia_vs_k(X, max_k=10): #### Implement this function, this function worth 10 points ####
    """
    Plot the inertia versus the number of clusters.

    Parameters:
    - X (array-like): Input data.
    - max_k (int): Maximum number of clusters to consider. Default is 10.

    Returns:
    - None
    """
    wcss = []
    for i in range(1, max_k+1):
        kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
        kmeans.fit(X)
        wcss.append(kmeans.inertia_)
        
    plt.plot(range(1, max_k+1), wcss, marker ='*')
    plt.title("Inertia vs No. of Clusters")
    plt.xlabel("Number of CLuster")
    plt.ylabel("Within-Cluster Sum of Square")
    plt.show()
        
def plot_silhouette_vs_k(X, max_k=10): #### Implement this function, this function worth 10 points ####
    """
    Plot the silhouette score versus the number of clusters.

    Parameters:
    - X (array-like): Input data.
    - max_k (int): Maximum number of clusters to consider. Default is 10.

    Returns:
    - None
    """
    scores = []
    for i in range(2,max_k+1):
        kmeans = KMeans(n_clusters = i, init = 'k-means++', random_state = 42)
        labels = kmeans.fit_predict(X)
        score = silhouette_score(X,labels)
        scores.append(score)

    plt.plot(range(2,max_k+1),scores,marker = 'o')
    plt.title('Silhouette Score vs Number of Clusters')
    plt.xlabel("Number of Clusters")
    plt.ylabel("Silhouette Score")
    plt.show()
        

def main():
    # Load the Wine dataset
    wine = load_wine()
    X = wine.data[:, :2]  # Use only the first two features for visualization

    # Plot Inertia vs Number of Clusters
    plot_inertia_vs_k(X)

    # Plot Silhouette Score vs Number of Clusters
    plot_silhouette_vs_k(X)

if __name__ == "__main__":
    main()
